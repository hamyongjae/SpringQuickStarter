<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
	<!-- polymorphism -->
	<!-- <context:component-scan base-package="polymorphism"></context:component-scan> 
		<bean id ="tv" class="polymorphism.SamsungTV"> <property name="speaker" ref="apple"></property> 
		<property name="price" value="2700000"></property> </bean> <bean id="sony" 
		class="polymorphism.SonySpeaker"></bean> <bean id="apple" class="polymorphism.AppleSpeaker"></bean> -->

	<!-- DAY01 practice2 -->

	<!-- <bean id="userService" class="com.springbook.biz.user.impl.UserServiceimpl"> 
		<property name="userDAO" ref="userDAO" /> </bean> <bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"></bean> -->


	<context:component-scan
		base-package="com.springbook.biz"></context:component-scan>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- 
	<bean id="before" class="com.springbook.biz.common.BeforeAdvice"></bean>
	<bean id="after" class="com.springbook.biz.common.AfterAdvice"></bean>
	<bean id="around" class="com.springbook.biz.common.AroundAdvice"></bean>
	<bean id="afterReturning"
		class="com.springbook.biz.common.AfterReturningAdvice"></bean>
	<bean id="afterThrowing"
		class="com.springbook.biz.common.AfterThrowingAdvice"></bean>

	<aop:config>

		<aop:pointcut
			expression="execution(* com.springbook.biz..*impl.*(..))"
			id="allPointcut" />

		<aop:aspect ref="around">
			<aop:around pointcut-ref="allPointcut" method="aroundLog" />
		</aop:aspect>
	</aop:config> 
	-->

	<!-- transaction 설정 -->
	<!-- <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource"/> </bean> <tx:advice id="txAdvice" 
		transaction-manager="txManager"> <tx:attributes> <tx:method name="get*" read-only="true"/> 
		<tx:method name="*"/> </tx:attributes> </tx:advice> <aop:config> <aop:pointcut 
		id="txPointcut" expression="execution(* com.springbook.biz..*(..))"/> <aop:advisor 
		pointcut-ref="txPointcut" advice-ref="txAdvice"/> </aop:config> -->
		
	<!-- DataSource 설정 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.mariadb.jdbc.Driver" />
        <property name="url" value="jdbc:mariadb://localhost:3306/board" />
        <property name="username" value="root" />
        <property name="password" value="1234" />
    </bean>
</beans>
